package android.example.courseworkone;

import androidx.appcompat.app.AppCompatActivity;
import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import java.util.ArrayList;
import java.util.Random;
import static android.graphics.Color.*;

public class CarImageActivity extends AppCompatActivity {

        public static final ArrayList<Integer> randI = new ArrayList<>();

        public int cars[] = {
                R.drawable.audi_1, R.drawable.audi_2,
                R.drawable.bmw_1, R.drawable.bmw_2,
                R.drawable.chevrolet_1,
                R.drawable.honda_1, R.drawable.honda_2,
                R.drawable.hyundai_1,
                R.drawable.jaguar_1, R.drawable.jaguar_2,
                R.drawable.kia,
                R.drawable.lamborghini_1, R.drawable.lamborghini_2,
                R.drawable.landrover_1,
                R.drawable.mazda_1,
                R.drawable.mini_1,
                R.drawable.nissan_1, R.drawable.nissan_2,
                R.drawable.renault_1, R.drawable.renault_2,
                R.drawable.rollsroyce_1,
                R.drawable.suzuki_1,
                R.drawable.tata_1,
                R.drawable.tesla_1,
                R.drawable.toyota_1, R.drawable.toyota_2, R.drawable.toyota_3, R.drawable.toyota_4, R.drawable.toyota_5, R.drawable.toyota_6
        };

        private static final ArrayList<Integer> ints = new ArrayList<>();
        boolean submitImage;
        public static int choose=-1;
        Random ran = new Random();
        int random;
        Button identifyWords;
        TextView tv;
        TextView correct;
        TextView wrong;
        int x, y, z;
        int carName;
        int cAnswer;

        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_car_image);

//  random image
            if(randI.size()>30){
                finish();
            }

            x = randI();
            randI.add(x);
            ints.add(x);
            y = randI();
            while(x/5==y/5){                //to make sure there wont be more than images from the same car
                y = randI();
            }
            ints.add(y);
            z = randI();
            while(x/5==z/5 || y/5==z/5){
                z = randI();
            }
            ints.add(z);
            carName = (ran.nextInt(4));

            final ImageView iv1 = findViewById(R.id.identify_1);
            final ImageView iv2 = findViewById(R.id.identify_2);
            final ImageView iv3 = findViewById(R.id.identify_3);



            if(savedInstanceState!= null) {        // if there is an instance saved, it will save them back
                this.x = savedInstanceState.getInt("x");
                this.y = savedInstanceState.getInt("y");
                this.z = savedInstanceState.getInt("z");
                this.cAnswer = savedInstanceState.getInt("cAnswer");
                this.carName = savedInstanceState.getInt("carName");
                this.submitImage=savedInstanceState.getBoolean("submitImage");

            }

            if (carName==1){
                cAnswer=x;
            }else if (carName==2){
                cAnswer=y;
            }else{
                cAnswer=z;
            }
            String carN = getCar(cAnswer);

            TextView textView = findViewById(R.id.textView_name);
            textView.setText(carN);

            iv1.setImageResource(cars[x]);
            iv2.setImageResource(cars[y]);
            iv3.setImageResource(cars[z]);


            identifyWords = findViewById(R.id.button_next);

        }

        private int randI() {
            int x = ran.nextInt(30);

            while(randI.contains(x)){
                x=ran.nextInt(30);
            }
            return x;
        }

        private String getCar(int num) {
            String car;
            if(-1<num && num<2){
                car="AUDI";
            }else if(1<num && num<4){
                car="BMW";
            }else if(num == 4) {
                car="CHEVROLET";
            }else if(4<num && num<7){
                car="HONDA";
            }else if(num == 7){
                car="HYUNDAI";
            }else if(7<num && num<10){
                car="JAGUAR";
            }else if(num == 10){
                car="KIA";
            }else if(10<num && num<13){
                car="LAMBORGHINI";
            }else if(num == 13){
                car="LANDROVER";
            }else if(num == 14){
                car="MAZDA";
            }else if(num == 15){
                car="MINI";
            }else if(15<num && num<18){
                car="NISSAN";
            }else if(17<num && num<20){
                car="RENAULT";
            }else if(num == 20){
                car="ROLLSROYCE";
            }else if(num == 21){
                car="SUZUKI";
            }else if(num == 22){
                car="TATA";
            }else if(num == 23){
                car="TESLA";
            }else {
                car="TOYOTA";
            }
            return car;
        }


        public void findCorrectImage(View view) {
            //did this to do the thing when orientation changes


            identifyWords.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });

        }



        public void click1(View view) {
            choose = x;
            if (choose == cAnswer){
                correct = (TextView) findViewById(R.id.textView_correct);
                correct.setText("CORRECT!");
                correct.setBackgroundColor(Color.GREEN);// if the user select the correct answer

            } else {
                wrong = (TextView) findViewById(R.id.textView_wrong);
                wrong.setText("WRONG!");
                wrong.setBackgroundColor(RED);
            }

            identifyWords.setEnabled(true);
            identifyWords.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });

        }


        public void click2(View view) {
            choose = y;
            if (choose == cAnswer){
                correct = (TextView) findViewById(R.id.textView_correct);
                correct.setText("CORRECT!");
                correct.setBackgroundColor(Color.GREEN);// if the user select the correct answer

            } else {
                wrong = (TextView) findViewById(R.id.textView_wrong);
                wrong.setText("WRONG!");
                wrong.setBackgroundColor(RED);
            }
            identifyWords.setEnabled(true);
            identifyWords.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });
        }


        public void click3(View view) {
            choose = z;
            if (choose == cAnswer){
                correct = (TextView) findViewById(R.id.textView_correct);
                correct.setText("CORRECT!");
                correct.setBackgroundColor(Color.GREEN);// if the user select the correct answer

            } else {
                wrong = (TextView) findViewById(R.id.textView_wrong);
                wrong.setText("WRONG!");
                wrong.setBackgroundColor(RED);
            }
            identifyWords.setEnabled(true);
            identifyWords.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });
        }
    }









    package com.example.myapplication;

    import androidx.appcompat.app.AppCompatActivity;

    import android.content.Intent;
    import android.graphics.Color;
    import android.os.Bundle;
    import android.os.CountDownTimer;
    import android.view.View;
    import android.widget.ArrayAdapter;
    import android.widget.Button;
    import android.widget.ImageView;
    import android.widget.Spinner;
    import android.widget.TextView;
    import android.widget.Toast;

    import java.util.ArrayList;
    import java.util.Random;

    import static android.provider.AlarmClock.EXTRA_MESSAGE;

    public class imagePage extends AppCompatActivity {
        public static final ArrayList<Integer> randInts = new ArrayList<>();

        public int cars[] = {
                R.drawable.audi1, R.drawable.audi2, R.drawable.audi3,
                R.drawable.audi4, R.drawable.audi5, R.drawable.benz1, R.drawable.benz2, R.drawable.benz3, R.drawable.benz4,
                R.drawable.benz5, R.drawable.bmw1, R.drawable.bmw2, R.drawable.bmw4, R.drawable.bmw5,
                R.drawable.bmw3, R.drawable.ford1, R.drawable.ford2, R.drawable.ford3,R.drawable.ford4,R.drawable.ford5,
                R.drawable.rr1, R.drawable.rr2, R.drawable.rr3, R.drawable.rr4,R.drawable.rr5,
                R.drawable.honda1, R.drawable.honda2, R.drawable.honda3, R.drawable.honda4, R.drawable.honda5, R.drawable.toyota1,
                R.drawable.toyota2, R.drawable.toyota3, R.drawable.toyota5
        };

        Random rand = new Random();
        ImageView v1;
        Spinner spinner;
        CountDownTimer myCountDownTimer;
        int timerTime;
        TextView timeShow;
        Button identifyTheMake;
        int random;
        boolean clickedSubmit;
        boolean finishedYet = false;
        String correctMake;
        boolean message;
        String grade;
        TextView output;
        TextView wrongOutput;

        //---------save the instance state here------------//
        @Override
        protected void onSaveInstanceState(Bundle outState) {
            super.onSaveInstanceState(outState);
            outState.putInt("randInt", random);
            outState.putInt("timerTime",timerTime);
            outState.putBoolean("submitClicked", clickedSubmit);
            outState.putBoolean("finishedYet", finishedYet);
            outState.putBoolean("message", message);
            outState.putString("correctBrand", correctMake);
        }

        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_image_page);

            if (randInts.size() > 28) {
                finish();
            }
            //message = getIntent().getExtras().getBoolean("switchBool");
            clickedSubmit = false;
            int x = rand.nextInt(30);
            while (randInts.contains(x)) {
                x = rand.nextInt(30);
            }

            random = x;
            randInts.add(random);
            timerTime=21000;
            if (savedInstanceState != null) {
                this.random = savedInstanceState.getInt("randInt");
                this.timerTime = savedInstanceState.getInt("timerTime");
                this.clickedSubmit = savedInstanceState.getBoolean("submitClicked");
                this.message = savedInstanceState.getBoolean("message");
                this.finishedYet = savedInstanceState.getBoolean("finishedYet");
            }
            v1 = findViewById(R.id.identifyImageView);
            identifyTheMake = findViewById(R.id.submitMake);
            output=findViewById(R.id.output_text);
            wrongOutput=findViewById(R.id.wrongOutput);

            timeShow=findViewById(R.id.timeText);

            correctMake = getBrand(random);
            v1.setImageResource(cars[random]);
            ArrayAdapter<CharSequence> names=ArrayAdapter.createFromResource(this,R.array.brand_names, android.R.layout.simple_spinner_item);
            names.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
            spinner=findViewById(R.id.breedSpinner);

                    // the timer should start only if the toggle button is on

                timeShow.setText(String.valueOf(timerTime/1000));
                myCountDownTimer = new MyCountDownTimer(timerTime, 1000);
                myCountDownTimer.start();

            if (spinner!=null){
                spinner.setAdapter(names);
            }

            if (clickedSubmit){
                identifyTheMake.setText("Next");
            }
        }


        private String getBrand(int num){
            String make;
            if(-1<num && num<5){
                make="Audi";
            }else if(4<num && num<10){
                make="Mercedes Benz";
            }else if(9<num && num<15){
                make="BMW";
            }else if(14<num && num<20){
                make="Ford";
            }else if(19<num && num<25){
                make="Rolls Royce";
            }else if(24<num && num<30){
                make="Honda";
            }else{
                make="Toyota";
            }
            return make;
        }
        public void clickSubmit(View w){
            if (message){
                finishedYet=true;
                myCountDownTimer.cancel();
            }
            if (!clickedSubmit){
                identifyTheMake.setText("Next");
                String text=spinner.getSelectedItem().toString();
                if (text.equals(correctMake)){
                    output.setText("Correct");
                    output.setTextColor(Color.GREEN);
                }else{
                    output.setText("Wrong");
                    output.setTextColor(Color.RED);
                    wrongOutput.setText(correctMake);
                    wrongOutput.setTextColor(Color.YELLOW);
                }
                clickedSubmit=true;
            }else{
                Intent intent = new Intent(imagePage.this, imagePage.class);  // if the same button is clicked again, which means the user wants to go to the next question
                //intent.putExtra("switchBool", message);
                clickedSubmit=false;
                startActivity(intent);
            }

        }


        public class MyCountDownTimer extends CountDownTimer {      // this is the timer class which extends from countdown timer

            public MyCountDownTimer(long millisInFuture, long countDownInterval) {
                super(millisInFuture, countDownInterval);
            }

            @Override
            public void onTick(long millisUntilFinished) {     // I'm each tick, it takes is taken
                timerTime=timerTime-1000;
                  // progress bar is set to the new value
                timeShow.setText(String.valueOf(timerTime/1000));
            }

            @Override
            public void onFinish() {  // when the time is finished, answer whatever you say have selected should be evaluated


                if(!finishedYet){
                    finishedYet=true;
                    identifyTheMake.setText("Next");
                    //questions=questions+1;
                    String text = spinner.getSelectedItem().toString(); //get the selected item as text
                    if (text.equals(correctMake)) {
                        output.setText("Correct");
                        output.setTextColor(Color.GREEN);
    //                    Intent intent = new Intent(imagePage.this, imagePage.class);
    //                    startActivity(intent);
                        //marks=marks+1;
                        //Toast.makeText(getApplicationContext(), "Marks : "+marks+"/"+questions, Toast.LENGTH_SHORT).show();  // each time when the user is submitting an answer, the score should be shown
                    }else {
                        output.setText("Wrong");
                        output.setTextColor(Color.RED);
                        wrongOutput.setText(correctMake);
                        wrongOutput.setTextColor(Color.YELLOW);
    //                    Intent intent = new Intent(imagePage.this, imagePage.class);
    //                    intent.putExtra(EXTRA_MESSAGE, message);
    //                    startActivity(intent);
                        //Toast.makeText(getApplicationContext(), "Marks : "+marks+"/"+questions, Toast.LENGTH_SHORT).show();
                    }
                    //overridePendingTransition(R.anim.fade_out, R.anim.fade_in);
                    clickedSubmit = true;
                }
            }
        }
    }




    package com.example.myapplication;

    import androidx.appcompat.app.AppCompatActivity;

    import android.graphics.Color;
    import android.os.Bundle;
    import android.os.CountDownTimer;
    import android.view.View;
    import android.widget.Button;
    import android.widget.ImageView;
    import android.widget.TextView;

    import java.util.ArrayList;
    import java.util.Random;

    import static android.graphics.Color.RED;
    import static com.example.myapplication.hint.choose;

    public class idenityTheCarImage extends AppCompatActivity {

        public int cars[] = {
                R.drawable.audi1, R.drawable.audi2, R.drawable.audi3,
                R.drawable.audi4, R.drawable.audi5, R.drawable.benz1, R.drawable.benz2, R.drawable.benz3, R.drawable.benz4,
                R.drawable.benz5, R.drawable.bmw1, R.drawable.bmw2, R.drawable.bmw3,R.drawable.bmw4, R.drawable.bmw5,
                  R.drawable.ford1, R.drawable.ford2, R.drawable.ford3,R.drawable.ford4,R.drawable.ford5,
                R.drawable.rr1, R.drawable.rr2, R.drawable.rr3, R.drawable.rr4,R.drawable.rr5,
                R.drawable.honda1, R.drawable.honda2, R.drawable.honda3, R.drawable.honda4, R.drawable.honda5, R.drawable.toyota1,
                R.drawable.toyota2, R.drawable.toyota3, R.drawable.toyota5
        };

        private  static  final ArrayList<Integer>randInts=new ArrayList<>();
        Random rand=new Random();
        public static int userChoice=-1;
        int a;
        int b;
        int c;
        int correctGuess;
        int brandName;
        TextView correct;
        TextView wrong;
        private boolean clickedSubmit;
        boolean message;
        Button submitBtn;
        boolean finishedYet=false;
        CountDownTimer myCountDownTimer;
        int timerTime2;
        TextView timeShow;

        @Override
        protected void onSaveInstanceState(Bundle outState) {  // to see each instance to use when the orientation changes
            super.onSaveInstanceState(outState);
            outState.putInt("a",a);
            outState.putInt("b",b);
            outState.putInt("c",c);
            outState.putInt("correctAnswer",correctGuess);
            outState.putInt("timerTime2",timerTime2);
            outState.putInt("name",brandName);
            outState.putBoolean("submitClicked",clickedSubmit);

            outState.putBoolean("finishedYet",finishedYet);
            outState.putBoolean("message",message);
        }



        @Override
        protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_idenity_the_car_image);

            if (randInts.size()>34){
                finish();
            }

            a=randInt();
            randInts.add(a);

            b=randInt();
            while (a/10==b/10){
                b=randInt();
            }
            randInts.add(b);

            while(a/10==c/10 || b/10==c/10){
                c = randInt();
            }
            randInts.add(c);

            brandName=rand.nextInt(4);

            final ImageView v1 = findViewById(R.id.carImage1);
            final ImageView v2 = findViewById(R.id.carImage2);
            final ImageView v3 = findViewById(R.id.carImage3);

            timerTime2=21000;

            if(savedInstanceState!= null) {        // if there is an instance saved, it will save them back
                this.a = savedInstanceState.getInt("a");
                this.b = savedInstanceState.getInt("b");
                this.c = savedInstanceState.getInt("c");
                this.correctGuess = savedInstanceState.getInt("correctGuess");
                this.brandName = savedInstanceState.getInt("brandName");
                this.clickedSubmit=savedInstanceState.getBoolean("submitClicked");
                this.timerTime2 = savedInstanceState.getInt("timerTime2");
                this.message=savedInstanceState.getBoolean("message");
                this.finishedYet=savedInstanceState.getBoolean("finishedYet");
            }

            if (brandName==1){
                correctGuess=a;
            }else if (brandName==2){
                correctGuess=b;
            }else{
                correctGuess=c;
            }
            String brand = getBrand(correctGuess);
            timeShow=findViewById(R.id.timeText2);
            timeShow.setText(String.valueOf(timerTime2/1000));
            myCountDownTimer = new MyCountDownTimer(timerTime2, 1000);
            myCountDownTimer.start();

            TextView textView = findViewById(R.id.brandNametext);
            textView.setText(brand);


            v1.setImageResource(cars[a]);
            v2.setImageResource(cars[b]);
            v3.setImageResource(cars[c]);

            submitBtn=findViewById(R.id.guessTheCarSubmitBtn);


        }


        private String getBrand(int num){
            String brand;
            if(-1<num && num<5){
                brand="Audi";
            }else if(4<num && num<11){
                brand="Mercedes Benz";
            }else if(9<num && num<16){
                brand="BMW";
            }else if(14<num && num<21){
                brand="Ford";
            }else if(19<num && num<25){
                brand="Rolls Royce";
            }else if(24<num && num<31){
                brand="Honda";
            }else{
                brand="Toyota";
            }
            return brand;
        }

        public int randInt(){    // to generate a random Number which is not used already
            int x = rand.nextInt(34);

            while(randInts.contains(x)){
                x=rand.nextInt(34);
            }
            return x;
        }
        public void findCorrectImage(View view) {
            //did this to do the thing when orientation changes


            submitBtn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });

        }


        public void click1(View view) {
            userChoice = a;
            myCountDownTimer.cancel();
            if (userChoice == correctGuess){
                correct = (TextView) findViewById(R.id.guessTheCaroutput);
                correct.setText("CORRECT!");
                correct.setTextColor(Color.GREEN);// if the user select the correct answer

            } else {
                wrong = (TextView) findViewById(R.id.guessTheCaroutput);
                wrong.setText("WRONG!" );
                wrong.setTextColor(RED);
            }

            submitBtn.setEnabled(true);
            submitBtn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });

        }


        public void click2(View view) {
            userChoice = b;
            myCountDownTimer.cancel();
            if (userChoice == correctGuess){
                correct = (TextView) findViewById(R.id.guessTheCaroutput);
                correct.setText("CORRECT!");
                correct.setTextColor(Color.GREEN);// if the user select the correct answer

            } else {
                wrong = (TextView) findViewById(R.id.guessTheCaroutput);
                wrong.setText("WRONG! " );
                wrong.setTextColor(Color.RED);
            }
            submitBtn.setEnabled(true);
            submitBtn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });
        }


        public void click3(View view) {
            userChoice = c;
            myCountDownTimer.cancel();
            if (userChoice == correctGuess){
                correct = (TextView) findViewById(R.id.guessTheCaroutput);
                correct.setText("CORRECT!");
                correct.setTextColor(Color.GREEN);// if the user select the correct answer

            } else {
                wrong = (TextView) findViewById(R.id.guessTheCaroutput);
                wrong.setText("WRONG!");
                wrong.setTextColor(Color.RED);
            }
            submitBtn.setEnabled(true);
            submitBtn.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    finish();
                    startActivity(getIntent());
                }
            });
        }

        public class MyCountDownTimer extends CountDownTimer {      // this is the timer class which extends from countdown timer

            public MyCountDownTimer(long millisInFuture, long countDownInterval) {
                super(millisInFuture, countDownInterval);
            }

            @Override
            public void onTick(long millisUntilFinished) {     // I'm each tick, it takes is taken
                timerTime2=timerTime2-1000;
                // progress bar is set to the new value
                timeShow.setText(String.valueOf(timerTime2/1000));
            }

            @Override
            public void onFinish() {  // when the time is finished, answer whatever you say have selected should be evaluated


                if(!finishedYet){
                    finishedYet=true;
                    correct = (TextView) findViewById(R.id.guessTheCaroutput);
                    //wrong = (TextView) findViewById(R.id.guessTheCaroutput);
                    submitBtn.setText("Next");
                    correct.setText("Out Of Time");
                    correct.setTextColor(Color.RED);
    //                wrong.setText(correctGuess);
    //                wrong.setTextColor(Color.YELLOW);
                    //questions=questions+1;
                    //String text = spinner.getSelectedItem().toString(); //get the selected item as text
    //                if (userChoice.equals(correctGuess)) {
    //                    output.setText("Correct");
    //                    output.setTextColor(Color.GREEN);
    //                    //                    Intent intent = new Intent(imagePage.this, imagePage.class);
    //                    //                    startActivity(intent);
    //                    //marks=marks+1;
    //                    //Toast.makeText(getApplicationContext(), "Marks : "+marks+"/"+questions, Toast.LENGTH_SHORT).show();  // each time when the user is submitting an answer, the score should be shown
    //                }else {

                        //                    Intent intent = new Intent(imagePage.this, imagePage.class);
                        //                    intent.putExtra(EXTRA_MESSAGE, message);
                        //                    startActivity(intent);
                        //Toast.makeText(getApplicationContext(), "Marks : "+marks+"/"+questions, Toast.LENGTH_SHORT).show();
                   // }
                    //overridePendingTransition(R.anim.fade_out, R.anim.fade_in);
                    //clickedSubmit = true;
                }
            }
        }
    }
